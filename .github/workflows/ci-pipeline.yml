name: CI Pipeline for SSO Demo # Tên của workflow

on:
  push:
    branches: [ main ] # Kích hoạt khi có push lên nhánh main
  # Tùy chọn: Chạy cả khi có Pull Request vào nhánh main
  # pull_request:
  #   branches: [ main ]

jobs:
  build-and-push-docker-image: # Tên của job
    runs-on: ubuntu-latest # Chạy trên máy ảo Ubuntu mới nhất

    steps:
      # Bước 1: Checkout mã nguồn từ repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Bước 2: Cài đặt Java JDK 17 (theo yêu cầu trong pom.xml)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Sử dụng Temurin JDK
          cache: maven # Cache thư viện Maven để build nhanh hơn

      # Bước 3: Cấp quyền thực thi cho Maven wrapper (mvnw)
      # File này nằm trong SSO-main/demo1/
      - name: Grant execute permission for mvnw
        run: chmod +x SSO-main/demo1/mvnw

      # Bước 4: Build ứng dụng Spring Boot bằng Maven wrapper
      # Chạy lệnh build từ thư mục gốc, chỉ định file pom.xml trong demo1
      # -DskipTests để bỏ qua việc chạy test (có thể bỏ đi nếu muốn chạy test)
      - name: Build with Maven
        run: ./SSO-main/demo1/mvnw -f SSO-main/demo1/pom.xml clean package -DskipTests
      # Bước 5: Thiết lập Docker Buildx (cần thiết cho các action Docker)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Bước 6: Đăng nhập vào Container Registry (ví dụ: Docker Hub)
      # Bạn cần tạo secrets trong Github repository cho username và token
      - name: Login to Docker Hub # Thay 'Docker Hub' nếu dùng registry khác (e.g., GHCR)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ }} # Tên đăng nhập registry
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # Access Token hoặc mật khẩu registry

      # Bước 7: Build và đẩy Docker image lên registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./SSO-main/demo1 # Đường dẫn tới thư mục chứa Dockerfile (SSO-main/demo1/)
          file: ./SSO-main/demo1/Dockerfile # Đường dẫn tới file Dockerfile
          push: true # Đẩy image sau khi build thành công
          tags: | # Danh sách các tag cho image
            punpun11/spring-boot-sso-demo:latest
            punpun11/spring-boot-sso-demo:${{ github.sha }}
          # *** THAY THẾ 'your-registry-username' BẰNG USERNAME REGISTRY CỦA BẠN ***